services:
  # NOVO: Serviço do Backend
  back-end:
    build:
      context: ./back-end # Pasta onde está o Dockerfile do backend
      dockerfile: Dockerfile
    image: pet-cemetery-back-end
    restart: always
    ports:
      - "8080:8080" # Expõe a API na porta 8080
    env_file:
      - ./back-end/src/main/resources/app.env # Usa as mesmas variáveis de ambiente de antes
    depends_on:
      db-postgres:
        condition: service_started
      db-mongo:
        condition: service_started

    volumes:
      - ./gcs-key/gcs-key.json:/app/gcs-key.json

  # NOVO: Serviço do Frontend
  front-end:
    build:
      context: ./front-end # Pasta onde está o Dockerfile do frontend
      dockerfile: Dockerfile
    image: pet-cemetery-front-end
    restart: always
    ports:
      - "4200:80" # Mapeia a porta 4200 do seu PC para a porta 80 do Nginx

  # Serviços de banco de dados permanecem os mesmos
  db-postgres:
    image: postgres:17-alpine
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - ./database.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  db-mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - ./mongo.env
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro # Monta o script de inicialização

volumes:
  postgres_data:
  mongo_data: